---
- name: 'Install packages'
  apt:
    name: '{{ item }}'
    state: present
    update_cache: yes
  with_items: 
    - openvpn
    - udev
    - openssl
  tags:
    - always
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'xenial'

- name: 'OpenVPN - Create keys directory'
  file:
    path: "{{ openvpn_base_dir }}/keys" 
    mode: 0700
    owner: root
    group: root
    state: directory
# generate client keys
- name: 'Copy openssl client extensions'
  copy:
    src: "{{item}}"
    dest: "{{openvpn_keydir}}"
    owner: root
    group: root
    mode: 0400
  with_items:
    - openssl-client.ext
    - openssl-ca.ext

- name: generate tls-auth key
  command: openvpn --genkey --secret ta.key
  args:
    chdir: "{{openvpn_keydir}}"
    creates: ta.key

- name: Generate CA key
  command: openssl req -nodes -newkey rsa:{{openvpn_server_dh}} -keyout ca-key.pem -out ca-csr.pem -days 3650 -subj /CN=OpenVPN-CA-{{inventory_hostname}}/
  args:
    chdir: "{{openvpn_keydir}}"
    creates: ca-key.pem

- name: Protect CA key
  file:
    path: "{{openvpn_keydir}}/ca-key.pem"
    mode: 0400

- name: Sign CA key
  command: openssl x509 -req -in ca-csr.pem -out ca.crt -CAcreateserial -signkey ca-key.pem -sha256 -days 3650 -extfile openssl-ca.ext
  args:
    chdir: "{{openvpn_keydir}}"
    creates: ca.crt

- name: generate client key
  command: "openssl req -nodes -newkey rsa:{{openvpn_server_dh}} -keyout {{item}}.key -out {{item}}.csr -days 3650 -subj /CN=OpenVPN-Client-{{ inventory_hostname }}/"
  args:
    chdir: "{{ openvpn_keydir }}"
    creates: "{{item}}.key"
  with_items: "{{inventory_hostname}}"

- name: protect client keys
  file:
    path: "{{openvpn_keydir}}/{{item}}.key"
    mode: 0400
  with_items: "{{inventory_hostname}}"

- name: sign client key
  command: openssl x509 -req -in {{item}}.csr -out {{item}}.crt -CA ca.crt -CAkey ca-key.pem -sha256 -days 3650 -extfile openssl-client.ext
  args:
    chdir: "{{openvpn_keydir}}"
    creates: "{{item}}.crt"
  with_items: "{{inventory_hostname}}"

- name: register server ca key
  slurp:
    src: "{{openvpn_keydir}}/ca.crt"
  register: ca_cert

- name: register tls-auth key
  slurp:
    src: "{{openvpn_keydir}}/ta.key"
  register: tls_auth

- name: register client certs
  slurp:
    src: "{{openvpn_keydir}}/{{item}}.crt"
  with_items: "{{inventory_hostname}}"
  register: client_certs

- name: register client keys
  slurp:
    src: "{{openvpn_keydir}}/{{item}}.key"
  with_items: "{{inventory_hostname}}"
  register: client_keys

- name: generate client config
  template:
    src: client.conf.j2
    dest: "{{ openvpn_base_dir }}/{{item.0.item}}-{{inventory_hostname}}.conf"
    owner: root
    group: root
    mode: 0400
  with_together:
    - "{{client_certs.results}}"
    - "{{client_keys.results}}"
  notify:
    - restart openvpn

- name: fetch client config
  fetch:
    src: "{{ openvpn_base_dir }}/{{item}}-{{inventory_hostname}}.conf"
    dest: "{{ openvpn_fetch_config_dir }}/{{item}}/{{inventory_hostname}}.conf"
    flat: yes
  with_items: "{{inventory_hostname}}"